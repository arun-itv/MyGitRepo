<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.abc.def</groupId>
        <artifactId>myaws-poc</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>
    <artifactId>web</artifactId>
    <packaging>war</packaging>
    <name>MY AWS POC</name>
    <description>MY AWS POC</description>
    <properties>
        <property name="build.version" value="${maven.build.timestamp}" />
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-java-sdk-bom</artifactId>
                <version>${com.amazonaws.aws-java-sdk.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
             <groupId>com.amazonaws</groupId>
             <artifactId>aws-java-sdk-ec2</artifactId>
          </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${org.apache.commons.commons-lang3.version}</version>
        </dependency>
        <dependency>
            <groupId>jstl</groupId>
            <artifactId>jstl</artifactId>
            <version>${jstl.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/javax.servlet/jsp-api -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jsp-api</artifactId>
            <version>${javax.servlet.jsp-api.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>
    <build>
        <finalName>idp-spice</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven.resources.version}</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/filtered</outputDirectory>
                            <encoding>${project.build.sourceEncoding}</encoding>
                            <resources>
                                <resource>
                                    <directory>${basedir}/src/main/webapp</directory>
                                    <targetPath>${project.build.directory}/filtered</targetPath>
                                    <includes>
                                        <include>**/*.js</include>
                                        <include>**/*.css</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>${maven.antrun.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <id>rename-resources</id>
                        <phase>prepare-package</phase>
                        <configuration>
                            <target>
                                <mkdir dir="${project.build.directory}/webapp/static-assets/fonts" />
                                <copy todir="${project.build.directory}/webapp/static-assets">
                                    <fileset dir="${project.build.directory}/filtered">
                                        <include name="**/*.js" />
                                        <include name="**/*.css" />
                                    </fileset>
                                    <mapper type="regexp" from="^(.*)\.(.*js|css)$$" to="\1${spice.build.version}.\2" />
                                </copy>
                                <copy todir="${project.build.directory}/webapp/static-assets/fonts">
                                    <fileset dir="${basedir}/src/main/webapp/fonts/">
                                        <include name="*" />
                                    </fileset>
                                </copy>
                                <copy todir="${project.build.directory}/webapp/static-assets/images">
                                    <fileset dir="${basedir}/src/main/webapp/images/">
                                        <include name="*" />
                                    </fileset>
                                </copy>
                                Deleting the static-asset folder created by first copy task
                                <delete includeEmptyDirs="true">
                                    <fileset dir="/${project.build.directory}/webapp/static-assets/static-assets" />
                                </delete>
                                <copy todir="${project.build.directory}/webapp/static-assets">
                                    <fileset dir="${basedir}/src/main/webapp/static-assets/">
                                        <include name="**/*" />
                                    </fileset>
                                </copy>
                                <copy todir="${basedir}/target/">
                                    <fileset dir="${basedir}/src/main/docker" includes="**" />
                                </copy>
                            </target>
                        </configuration>
                    </execution>
<!--                     <execution>
                        <id>make-tar-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <tar destfile="${project.build.directory}/${project.artifactId}-${project.version}.tar" basedir="${project.build.directory}/webapp" />
                            </target>
                        </configuration>
                    </execution> -->
<!--                      <execution>
                        <id>preparecleanup</id>
                        <phase>validate</phase>
                        <configuration>
                            <tasks>
                                <delete>
                                    <fileset dir="../idp-spice-apache/src/main/docker/htdocs/static-assets"/>
                                </delete>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution> -->
                 </executions>
            </plugin> 
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${maven-war-plugin.version}</version>
                <configuration>
                    <warName>${project.artifactId}-${project.version}</warName>
                    <warSourceExcludes>**/*.js,**/*.css</warSourceExcludes>
                    <webResources>
                        <resource>
                            <filtering>true</filtering>
                            <directory>${basedir}/src/main/webapp</directory>
                            <includes>
                                <include>**/*.jsp</include>
                                <include>**/*.conf</include>
                                <include>**/*.xml</include>
                                <include>**/*.properties</include>
                                <include>**/*.html</include>
                            </includes>
                        </resource>
                        <resource>
                            <filtering>true</filtering>
                            <directory>${project.build.directory}/webapp/static-assets</directory>
                            <includes>
                                <include>**/*.css</include>
                                <include>**/*.js</include>
                            </includes>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>
 <!--           <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${build.helper.maven.plugin.version}</version>
                    <executions>
                        <execution>
                            <id>attach-artifacts</id>
                            <phase>package</phase>
                            <goals>
                                <goal>attach-artifact</goal>
                            </goals>
                            <configuration>
                                <artifacts>
                                    <artifact>
                                        <file>${project.build.directory}/${project.artifactId}-${project.version}.tar</file>
                                        <type>tar</type>
                                    </artifact>
                                </artifacts>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
             <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>${git-commit-id-plugin.version}</version>
                <executions>
                    <execution>
                        <id>get-the-git-infos</id>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                    <prefix>git</prefix>
                    <verbose>false</verbose>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
                    <format>json</format>
                    <gitDescribe>
                        <skip>false</skip>
                        <always>false</always>
                        <dirty>-dirty</dirty>
                    </gitDescribe>
                </configuration>
            </plugin> -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                    <configuration>
                    <skip>false</skip>
                    <!-- <contextDirectory>${project.build.directory}</contextDirectory>
                    <verbose>true</verbose>
                    <dockerDirectory>${project.build.directory}/docker</dockerDirectory>
                    <repository>${private.registry.url}/${project.artifactId}</repository>
                    <pullNewerImage>false</pullNewerImage>
                    <retryCount>0</retryCount>
                    <tag>${project.version}</tag> -->
                </configuration>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <filtering>true</filtering>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.*</include>
                </includes>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <filtering>true</filtering>
                <directory>src/test/resources</directory>
                <includes>
                    <include>**/*.*</include>
                </includes>
            </testResource>
        </testResources>
    </build>
</project>
