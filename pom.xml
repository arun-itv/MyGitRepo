<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.abc.def</groupId>
    <artifactId>myaws-poc</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>AWS POC</name>
    <description>Sample AWS POC.</description>
    <properties>
        <slf4j.version>1.7.6</slf4j.version> 
        <spring.version>5.0.7.RELEASE</spring.version>
        <org.apache.tomcat.jdbc.version>8.0.38</org.apache.tomcat.jdbc.version>
        <mockito-all.version>2.0.2-beta</mockito-all.version>
        <aopalliance.version>1.0</aopalliance.version>
        <log4j.version>2.6.2</log4j.version>
        <log4j-1.2-api.version>2.3</log4j-1.2-api.version>
        <commons-logging.version>1.1.1</commons-logging.version>
        <commons-codec.version>1.11</commons-codec.version>
        <commons-httpclient.version>3.1</commons-httpclient.version>
        <javax.servlet.version>4.0.1</javax.servlet.version>
        <javax.servlet.jsp-api.version>2.0</javax.servlet.jsp-api.version>
        <jstl.version>1.2</jstl.version>
        <org.junit.jupiter.version>5.4.0</org.junit.jupiter.version>
        <org.junit.platform.version>1.4.0</org.junit.platform.version>
        <mockito-junit-jupiter.version>2.25.1</mockito-junit-jupiter.version>
        <org.springframework.spring-test-mvc.version>2.0.0</org.springframework.spring-test-mvc.version>
        <org.apache.commons.commons-lang3.version>3.8</org.apache.commons.commons-lang3.version>
        <commons-beanutils.version>1.9.3</commons-beanutils.version>
        <org.springframework.ldap.version>1.3.1.RELEASE</org.springframework.ldap.version>
        <com.amazonaws.aws-java-sdk.version>1.11.275</com.amazonaws.aws-java-sdk.version>
        <ojdbc8.version>12.2.0.1</ojdbc8.version>
        <org.apache.tomcat.tomcat-jdbc.version>8.0.36</org.apache.tomcat.tomcat-jdbc.version>
        <com.amazonaws.aws-java-sdk.version>1.11.581</com.amazonaws.aws-java-sdk.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
        <yearMonthDate>${maven.build.timestamp}</yearMonthDate>
        <jre.version>1.8</jre.version>
        <maven.resources.version>3.1.0</maven.resources.version>
        <maven.install.version>3.0.0-M1</maven.install.version>
        <maven.compiler.version>3.8.0</maven.compiler.version>
        <maven.antrun.version>1.8</maven.antrun.version>
        <maven-dependency-plugin.version>3.1.1</maven-dependency-plugin.version>
        <maven-war-plugin.version>3.2.2</maven-war-plugin.version>
        <junit.vmArgs>-Xms512m -Xmx512m</junit.vmArgs>
        <junit.additionalVmArgs />
        <maven.release.version>2.5.3</maven.release.version>
        <private.registry.url>123456789.dkr.ecr.us-east-1.amazonaws.com</private.registry.url>
        <dockerfile.maven.plugin.version>1.4.13</dockerfile.maven.plugin.version>
    </properties>
    <repositories>
        <!-- Artifactory repository -->
        <repository>
            <id>artifactory-common</id>
            <name>Artifactory</name>
            <url>https://abc.com/artifactory/mvnrelease</url>
        </repository>
     </repositories>

    <dependencies>
        <dependency>
            <groupId>com.oracle</groupId>
            <artifactId>ojdbc8</artifactId>
            <version>${ojdbc8.version}</version>
            <!-- <scope>provided</scope> -->
         </dependency>
        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-jdbc</artifactId>
            <version>${org.apache.tomcat.jdbc.version}</version>
        </dependency>
        <!-- Spring dependencies -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>aopalliance</groupId>
            <artifactId>aopalliance</artifactId>
            <version>${aopalliance.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jcl</artifactId>
            <version>${slf4j.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>commons-logging</artifactId>
                    <groupId>commons-logging</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-web</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-1.2-api</artifactId>
            <version>${log4j-1.2-api.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>${commons-logging.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>${commons-codec.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
            <version>${commons-httpclient.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>commons-logging</artifactId>
                    <groupId>commons-logging</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${javax.servlet.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${org.junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${org.junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-launcher</artifactId>
            <version>${org.junit.platform.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${mockito-junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
            <version>${org.hamcrest.version}</version>
            <scope>test</scope>
        </dependency> -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>${mockito-all.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <pluginManagement>
            <plugins>
                <!-- Maven 3 : Changes for installing libraries from local-repository 
                    ** Ends here ** -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven.resources.version}</version>
                    <configuration>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>${maven.sonar.version}</version>
                </plugin>
                <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>${dockerfile.maven.plugin.version}</version>
                <!--  <executions>
                    <execution>
                        <id>default</id>
                        <goals>
                            <goal>build</goal>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions> -->
                <configuration>
                    <contextDirectory>target</contextDirectory>
                    <buildDirectory>src/main/docker</buildDirectory>
                    <repository>${private.registry.url}/ECRREPONAME/${project.artifactId}</repository>
                    <googleContainerRegistryEnabled>false</googleContainerRegistryEnabled>
                    <tag>${project.version}</tag>
                    <retryCount>0</retryCount>
                    <skip>true</skip>
                    </configuration>
            </plugin>

            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.version}</version>
                <configuration>
                    <source>${jre.version}</source>
                    <target>${jre.version}</target>
                    <showDeprecation>true</showDeprecation>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven-dependency-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>analyze-only</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <failOnWarning>false</failOnWarning>
                    <ignoreNonCompile>true</ignoreNonCompile>
                    <ignoredUsedUndeclaredDependencies>
                        <!--Ignore used undeclared test dependencies -->
                        <ignoredUsedUndeclaredDependency>junit:*:*</ignoredUsedUndeclaredDependency>
                        <ignoredUsedUndeclaredDependency>org.mockito:*</ignoredUsedUndeclaredDependency>
                        <ignoredUsedUndeclaredDependency>com.fasterxml.jackson.core:*</ignoredUsedUndeclaredDependency>
                        <ignoredUsedUndeclaredDependency>org.slf4j:slf4j-api</ignoredUsedUndeclaredDependency>
                    </ignoredUsedUndeclaredDependencies>
                    <skip>${skip.static.analysis}</skip>
                </configuration>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-release-plugin</artifactId>
               <version>${maven.release.version}</version>
               <configuration>
                    <preparationGoals>clean verify</preparationGoals>
               </configuration>
            </plugin>
<!--             <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-javadoc-plugin</artifactId>
               <version>${maven.javadoc.version}</version>
               <configuration>
                  <doclint>none</doclint>
                  <skip>${maven.javadoc.skip}</skip>
               </configuration>
            </plugin> -->
        </plugins>
        <resources>
            <resource>
                <filtering>true</filtering>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.*</include>
                </includes>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <filtering>true</filtering>
                <directory>src/test/resources</directory>
                <includes>
                    <include>**/*.*</include>
                </includes>
            </testResource>
        </testResources>
    </build>
    <modules>
        <module>services</module> 
        <module>web</module>
        <module>apache</module>
    </modules>
   <!-- <profiles>
        <profile>
            <id>static-analysis</id>
            <properties>
                <skip.static.analysis>false</skip.static.analysis>
            </properties>
        </profile>
    </profiles>-->
    <scm>
       <connection>scm:git:https://github.abc.com/abc/abc.git</connection>
       <url>scm:git:https://github.abc.com/abc/abc.git</url>
       <tag>HEAD</tag>
    </scm>
    <!-- <distributionManagement> -->
       <!-- <repository> -->
          <!-- <id>release</id> -->
          <!-- <name>Maven Release Repository</name> -->
          <!-- <url>https://abc.com/jfrogartifactory/abc</url> -->
       <!-- </repository> -->
</project>
